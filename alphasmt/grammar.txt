<Strategy>(QF_NIA/QF_NRA/QF_BV/SAT) := <SolvingTactic>(QF_NIA/QF_NRA/QF_BV)  [0]
<Strategy>(QF_NIA/QF_NRA/QF_BV/SAT) := (then <PreprocessTactic>(QF_NIA/QF_NRA/QF_BV), <Strategy>(QF_NIA/QF_NRA/QF_BV))  [1]
<Strategy>(QF_NIA/QF_NRA/QF_BV) := (or-else (try-for <Strategy>(QF_NIA/QF_NRA/QF_BV) <timeout>) <Strategy>(QF_NIA/QF_NRA/QF_BV))  [2]
<Strategy>(QF_NIA/QF_NRA/QF_BV) := (if (> <num-probe percentile-value>) <Strategy>(QF_NIA/QF_NRA/QF_BV) <Strategy>(QF_NIA/QF_NRA/QF_BV))  [3]

<Strategy>(QF_NIA/QF_NRA) := (or-else (then nla2bv <Strategy>(BV)) <Strategy>(QF_NIA/QF_NRA))  [5]
<Strategy>(QF_BV) := (if is-qfbv-eq (then bv1-blast <Strategy>(BV) <Strategy>(QF_BV)) [6]

<Strategy>(QF_BV) := (then simplify bit-blast <Strategy>(SAT)) [7]

<SolverTactic>(QF_NIA/QF_NRA/QF_BV) := smt  [10]
<SolverTactic>(QF_NIA/QF_NRA) := qfnra-nlsat  [11]
<SolverTactic>(SAT) := sat  [12]

<PreprocessTactic>(QF_NIA/QF_NRA/QF_BV) := simplify [20]
<PreprocessTactic>(QF_NIA/QF_NRA/QF_BV) := propagate-values [21]
<PreprocessTactic>(QF_NIA/QF_NRA/QF_BV) := ctx-simplify [22]
<PreprocessTactic>(QF_NIA/QF_NRA/QF_BV) := elim-uncnstr [23]
<PreprocessTactic>(QF_NIA/QF_NRA/QF_BV) := solve-eqs [24]
<PreprocessTactic>(QF_BV) := purify-arith [25]
<PreprocessTactic>(QF_BV) := max-bv-sharing [26]
<PreprocessTactic>(QF_BV) := aig [27]
<PreprocessTactic>(QF_BV) := reduce-bv-size [28]
<PreprocessTactic>(QF_BV) := ackermannize_bv [29]
<PreprocessTactic>(QF_NIA) := lia2card [32]
<PreprocessTactic>(QF_NIA) := card2bv [33]
<PreprocessTactic>(QF_NIA) := cofactor-term-ite [34]

<timeout> := 2 | 4 | 8 | 16

<num-probe> := num-consts [50]
<num-probe> := num-exprs [51]
<num-probe> := size [52]

Tactic Parameters

"simplify": {
        "elim_and": ["true","false"],
        "som": ["true","false"],
        "blast_distinct": ["true","false"],
        "flat": ["true","false"],
        "hi_div0": ["true","false"],
        "local_ctx": ["true","false"],
        "hoist_mul": ["true","false"],
        "push_ite_bv": ["true","false"],
        "pull_cheap_ite": ["true","false"]
    }
"propagate-values": {
        "push_ite_bv": ["true","false"]
    }
"nla2bv": {
        "nla2bv_max_bv_size": [4, 8, 16, 32, 64, 128]
    }
"qfnra-nlsat": {
        "inline_vars": ["true","false"],
        "factor": ["true","false"],
        "seed": [i * 5 for i in range(6)]
    }

Additional Rules
1. no nested timeout
2. at most 3 timeout strategies
3. sum of timeouts less than 24
4. predicate branching can only happen at top two levels and cannot happen after any non-branching nodes
