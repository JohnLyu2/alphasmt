(if (> num-consts 218) (if (> num-consts 552) (if (> num-consts 725) (then (using-params simplify :blast_distinct true :elim_and true :flat true :hi_div0 false :hoist_mul false :local_ctx false :som false) (using-params nla2bv :nla2bv_max_bv_size 4) max-bv-sharing ctx-simplify propagate-values elim-uncnstr cofactor-term-ite smt) (then (using-params simplify :blast_distinct true :elim_and true :flat true :hi_div0 false :hoist_mul false :local_ctx false :som false) (using-params nla2bv :nla2bv_max_bv_size 4) max-bv-sharing ctx-simplify propagate-values elim-uncnstr cofactor-term-ite smt)) (if (> num-exprs 1509) (then (using-params simplify :blast_distinct false :elim_and true :flat false :hi_div0 true :hoist_mul true :local_ctx false :som false) ctx-simplify max-bv-sharing (using-params nla2bv :nla2bv_max_bv_size 4) (using-params simplify :blast_distinct false :elim_and true :flat false :hi_div0 false :hoist_mul true :local_ctx false :som true) solve-eqs smt) (if (> size 495) (then (using-params simplify :blast_distinct true :elim_and true :flat true :hi_div0 false :hoist_mul false :local_ctx false :som false) (using-params nla2bv :nla2bv_max_bv_size 4) max-bv-sharing ctx-simplify propagate-values elim-uncnstr cofactor-term-ite smt) (if (> num-consts 295) (then (using-params simplify :blast_distinct true :elim_and true :flat true :hi_div0 false :hoist_mul false :local_ctx false :som false) (using-params nla2bv :nla2bv_max_bv_size 4) max-bv-sharing ctx-simplify propagate-values elim-uncnstr cofactor-term-ite smt) (if (> num-exprs 687) (then (using-params simplify :blast_distinct false :elim_and true :flat false :hi_div0 true :hoist_mul true :local_ctx false :som false) ctx-simplify max-bv-sharing (using-params nla2bv :nla2bv_max_bv_size 4) (using-params simplify :blast_distinct false :elim_and true :flat false :hi_div0 false :hoist_mul true :local_ctx false :som true) solve-eqs smt) (then (using-params simplify :blast_distinct false :elim_and true :flat false :hi_div0 true :hoist_mul true :local_ctx false :som false) ctx-simplify max-bv-sharing (using-params nla2bv :nla2bv_max_bv_size 4) (using-params simplify :blast_distinct false :elim_and true :flat false :hi_div0 false :hoist_mul true :local_ctx false :som true) solve-eqs smt)))))) (if (> num-consts 155) (if (> size 241) (then (using-params simplify :blast_distinct false :elim_and true :flat false :hi_div0 true :hoist_mul true :local_ctx false :som false) ctx-simplify max-bv-sharing (using-params nla2bv :nla2bv_max_bv_size 4) (using-params simplify :blast_distinct false :elim_and true :flat false :hi_div0 false :hoist_mul true :local_ctx false :som true) solve-eqs smt) (then (using-params simplify :blast_distinct true :elim_and true :flat true :hi_div0 false :hoist_mul false :local_ctx false :som false) (using-params nla2bv :nla2bv_max_bv_size 4) max-bv-sharing ctx-simplify propagate-values elim-uncnstr cofactor-term-ite smt)) (if (> num-consts 45) (if (> num-consts 48) (if (> num-exprs 180) (if (> size 165) (then (using-params simplify :blast_distinct false :elim_and true :flat false :hi_div0 true :hoist_mul true :local_ctx false :som false) ctx-simplify max-bv-sharing (using-params nla2bv :nla2bv_max_bv_size 4) (using-params simplify :blast_distinct false :elim_and true :flat false :hi_div0 false :hoist_mul true :local_ctx false :som true) solve-eqs smt) (if (> num-exprs 404) (then (using-params simplify :blast_distinct false :elim_and true :flat false :hi_div0 true :hoist_mul true :local_ctx false :som false) ctx-simplify max-bv-sharing (using-params nla2bv :nla2bv_max_bv_size 4) (using-params simplify :blast_distinct false :elim_and true :flat false :hi_div0 false :hoist_mul true :local_ctx false :som true) solve-eqs smt) (if (> num-consts 97) (if (> num-consts 114) (then (using-params simplify :blast_distinct false :elim_and true :flat false :hi_div0 true :hoist_mul true :local_ctx false :som true) (using-params nla2bv :nla2bv_max_bv_size 5) solve-eqs smt) (then (using-params simplify :blast_distinct false :elim_and true :flat false :hi_div0 true :hoist_mul true :local_ctx false :som true) (using-params nla2bv :nla2bv_max_bv_size 5) solve-eqs smt)) (if (> num-exprs 315) (then (using-params simplify :blast_distinct false :elim_and true :flat false :hi_div0 true :hoist_mul true :local_ctx false :som false) ctx-simplify max-bv-sharing (using-params nla2bv :nla2bv_max_bv_size 4) (using-params simplify :blast_distinct false :elim_and true :flat false :hi_div0 false :hoist_mul true :local_ctx false :som true) solve-eqs smt) (if (> num-consts 86) (if (> num-exprs 287) (then (using-params simplify :blast_distinct false :elim_and true :flat false :hi_div0 true :hoist_mul true :local_ctx false :som false) ctx-simplify max-bv-sharing (using-params nla2bv :nla2bv_max_bv_size 4) (using-params simplify :blast_distinct false :elim_and true :flat false :hi_div0 false :hoist_mul true :local_ctx false :som true) solve-eqs smt) (then (using-params simplify :blast_distinct false :elim_and true :flat false :hi_div0 true :hoist_mul true :local_ctx false :som true) (using-params nla2bv :nla2bv_max_bv_size 5) solve-eqs smt)) (if (> num-consts 57) (then (using-params simplify :blast_distinct false :elim_and true :flat false :hi_div0 true :hoist_mul true :local_ctx false :som false) ctx-simplify max-bv-sharing (using-params nla2bv :nla2bv_max_bv_size 4) (using-params simplify :blast_distinct false :elim_and true :flat false :hi_div0 false :hoist_mul true :local_ctx false :som true) solve-eqs smt) (then (using-params simplify :blast_distinct false :elim_and true :flat false :hi_div0 true :hoist_mul true :local_ctx false :som false) ctx-simplify max-bv-sharing (using-params nla2bv :nla2bv_max_bv_size 4) (using-params simplify :blast_distinct false :elim_and true :flat false :hi_div0 false :hoist_mul true :local_ctx false :som true) solve-eqs smt))))))) (then (using-params simplify :blast_distinct false :elim_and true :flat false :hi_div0 true :hoist_mul true :local_ctx false :som false) ctx-simplify max-bv-sharing (using-params nla2bv :nla2bv_max_bv_size 4) (using-params simplify :blast_distinct false :elim_and true :flat false :hi_div0 false :hoist_mul true :local_ctx false :som true) solve-eqs smt)) (then (using-params simplify :blast_distinct false :elim_and true :flat false :hi_div0 true :hoist_mul true :local_ctx false :som false) ctx-simplify max-bv-sharing (using-params nla2bv :nla2bv_max_bv_size 4) (using-params simplify :blast_distinct false :elim_and true :flat false :hi_div0 false :hoist_mul true :local_ctx false :som true) solve-eqs smt)) (if (> num-consts 39) (if (> size 59) (then (using-params simplify :blast_distinct false :elim_and true :flat false :hi_div0 true :hoist_mul true :local_ctx false :som true) (using-params nla2bv :nla2bv_max_bv_size 5) solve-eqs smt) (then (using-params simplify :blast_distinct false :elim_and true :flat false :hi_div0 true :hoist_mul true :local_ctx false :som false) ctx-simplify max-bv-sharing (using-params nla2bv :nla2bv_max_bv_size 4) (using-params simplify :blast_distinct false :elim_and true :flat false :hi_div0 false :hoist_mul true :local_ctx false :som true) solve-eqs smt)) (then (using-params simplify :blast_distinct true :elim_and true :flat true :hi_div0 false :hoist_mul false :local_ctx false :som false) (using-params nla2bv :nla2bv_max_bv_size 4) max-bv-sharing ctx-simplify propagate-values elim-uncnstr cofactor-term-ite smt)))))