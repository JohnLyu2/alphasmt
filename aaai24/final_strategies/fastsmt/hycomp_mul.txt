(if (> size 50) (if (> size 244) (if (> num-exprs 3166) (if (> num-consts 65) (if (> num-consts 74) (then (using-params simplify :blast_distinct true :elim_and false :flat false :hi_div0 false :hoist_mul false :local_ctx false :som false) smt) (then (using-params simplify :blast_distinct true :elim_and false :flat false :hi_div0 false :hoist_mul false :local_ctx false :som false) smt)) (then (using-params simplify :blast_distinct true :elim_and false :flat false :hi_div0 false :hoist_mul true :local_ctx true :som false) propagate-values solve-eqs (using-params simplify :blast_distinct false :elim_and false :flat false :hi_div0 false :hoist_mul true :local_ctx false :som false) bit-blast (using-params simplify :blast_distinct true :elim_and false :flat false :hi_div0 false :hoist_mul true :local_ctx true :som false) smt)) (if (> num-exprs 1759) (if (> num-consts 43) (if (> size 284) (if (> num-exprs 2213) (if (> num-consts 65) (if (> num-consts 74) (if (> num-exprs 2576) (then (using-params simplify :blast_distinct true :elim_and false :flat false :hi_div0 false :hoist_mul false :local_ctx false :som false) smt) (then (using-params simplify :blast_distinct false :elim_and true :flat false :hi_div0 false :hoist_mul false :local_ctx false :som false) propagate-values (using-params simplify :blast_distinct false :elim_and false :flat false :hi_div0 false :hoist_mul true :local_ctx true :som false) smt)) (then (using-params simplify :blast_distinct false :elim_and true :flat true :hi_div0 true :hoist_mul false :local_ctx true :som true) propagate-values solve-eqs propagate-values max-bv-sharing elim-uncnstr solve-eqs (using-params simplify :blast_distinct false :elim_and true :flat true :hi_div0 true :hoist_mul false :local_ctx true :som true) bit-blast (using-params qfnra-nlsat :factor true :inline_vars false :seed 50))) (then (using-params simplify :blast_distinct false :elim_and true :flat false :hi_div0 false :hoist_mul false :local_ctx false :som false) propagate-values (using-params simplify :blast_distinct false :elim_and false :flat false :hi_div0 false :hoist_mul true :local_ctx true :som false) smt)) (if (> num-consts 65) (then (using-params simplify :blast_distinct false :elim_and true :flat false :hi_div0 false :hoist_mul false :local_ctx false :som false) propagate-values (using-params simplify :blast_distinct false :elim_and false :flat false :hi_div0 false :hoist_mul true :local_ctx true :som false) smt) (then (using-params simplify :blast_distinct true :elim_and false :flat false :hi_div0 false :hoist_mul false :local_ctx false :som false) smt))) (then (using-params simplify :blast_distinct false :elim_and true :flat true :hi_div0 true :hoist_mul false :local_ctx true :som true) propagate-values solve-eqs propagate-values max-bv-sharing elim-uncnstr solve-eqs (using-params simplify :blast_distinct false :elim_and true :flat true :hi_div0 true :hoist_mul false :local_ctx true :som true) bit-blast (using-params qfnra-nlsat :factor true :inline_vars false :seed 50))) (then (using-params simplify :blast_distinct true :elim_and false :flat false :hi_div0 false :hoist_mul false :local_ctx false :som false) smt)) (if (> num-consts 74) (then (using-params simplify :blast_distinct false :elim_and true :flat false :hi_div0 false :hoist_mul false :local_ctx false :som false) propagate-values (using-params simplify :blast_distinct false :elim_and false :flat false :hi_div0 false :hoist_mul true :local_ctx true :som false) smt) (if (> num-consts 56) (then (using-params simplify :blast_distinct true :elim_and false :flat false :hi_div0 false :hoist_mul true :local_ctx true :som false) propagate-values solve-eqs (using-params simplify :blast_distinct false :elim_and false :flat false :hi_div0 false :hoist_mul true :local_ctx false :som false) bit-blast (using-params simplify :blast_distinct true :elim_and false :flat false :hi_div0 false :hoist_mul true :local_ctx true :som false) smt) (then (using-params simplify :blast_distinct false :elim_and true :flat false :hi_div0 false :hoist_mul false :local_ctx false :som false) propagate-values (using-params simplify :blast_distinct false :elim_and false :flat false :hi_div0 false :hoist_mul true :local_ctx true :som false) smt))))) (if (> num-exprs 246) (if (> num-consts 33) (if (> num-exprs 1759) (if (> num-exprs 3166) (then (using-params simplify :blast_distinct false :elim_and true :flat true :hi_div0 true :hoist_mul false :local_ctx true :som true) propagate-values solve-eqs propagate-values max-bv-sharing elim-uncnstr solve-eqs (using-params simplify :blast_distinct false :elim_and true :flat true :hi_div0 true :hoist_mul false :local_ctx true :som true) bit-blast (using-params qfnra-nlsat :factor true :inline_vars false :seed 50)) (then (using-params simplify :blast_distinct true :elim_and false :flat false :hi_div0 false :hoist_mul true :local_ctx true :som false) propagate-values solve-eqs (using-params simplify :blast_distinct false :elim_and false :flat false :hi_div0 false :hoist_mul true :local_ctx false :som false) bit-blast (using-params simplify :blast_distinct true :elim_and false :flat false :hi_div0 false :hoist_mul true :local_ctx true :som false) smt)) (if (> num-consts 56) (then (using-params simplify :blast_distinct true :elim_and false :flat false :hi_div0 false :hoist_mul true :local_ctx true :som false) propagate-values solve-eqs (using-params simplify :blast_distinct false :elim_and false :flat false :hi_div0 false :hoist_mul true :local_ctx false :som false) bit-blast (using-params simplify :blast_distinct true :elim_and false :flat false :hi_div0 false :hoist_mul true :local_ctx true :som false) smt) (if (> num-exprs 1092) (if (> num-exprs 1300) (if (> size 209) (then (using-params simplify :blast_distinct true :elim_and false :flat false :hi_div0 false :hoist_mul false :local_ctx false :som false) smt) (if (> size 150) (if (> num-consts 43) (then (using-params simplify :blast_distinct true :elim_and false :flat false :hi_div0 false :hoist_mul true :local_ctx true :som false) propagate-values solve-eqs (using-params simplify :blast_distinct false :elim_and false :flat false :hi_div0 false :hoist_mul true :local_ctx false :som false) bit-blast (using-params simplify :blast_distinct true :elim_and false :flat false :hi_div0 false :hoist_mul true :local_ctx true :som false) smt) (then (using-params simplify :blast_distinct false :elim_and true :flat false :hi_div0 false :hoist_mul false :local_ctx false :som false) propagate-values (using-params simplify :blast_distinct false :elim_and false :flat false :hi_div0 false :hoist_mul true :local_ctx true :som false) smt)) (then (using-params simplify :blast_distinct true :elim_and false :flat false :hi_div0 false :hoist_mul false :local_ctx false :som false) smt))) (then (using-params simplify :blast_distinct true :elim_and false :flat false :hi_div0 true :hoist_mul true :local_ctx true :som true) smt)) (then (using-params simplify :blast_distinct false :elim_and true :flat false :hi_div0 false :hoist_mul false :local_ctx false :som false) propagate-values (using-params simplify :blast_distinct false :elim_and false :flat false :hi_div0 false :hoist_mul true :local_ctx true :som false) smt)))) (if (> num-exprs 1759) (then (using-params simplify :blast_distinct true :elim_and false :flat false :hi_div0 false :hoist_mul false :local_ctx false :som false) smt) (if (> num-exprs 1300) (then (using-params simplify :blast_distinct false :elim_and true :flat false :hi_div0 false :hoist_mul false :local_ctx false :som false) propagate-values (using-params simplify :blast_distinct false :elim_and false :flat false :hi_div0 false :hoist_mul true :local_ctx true :som false) smt) (if (> size 74) (if (> size 209) (then (using-params simplify :blast_distinct true :elim_and false :flat false :hi_div0 false :hoist_mul true :local_ctx true :som false) propagate-values solve-eqs (using-params simplify :blast_distinct false :elim_and false :flat false :hi_div0 false :hoist_mul true :local_ctx false :som false) bit-blast (using-params simplify :blast_distinct true :elim_and false :flat false :hi_div0 false :hoist_mul true :local_ctx true :som false) smt) (if (> num-exprs 850) (if (> size 87) (if (> size 150) (then (using-params simplify :blast_distinct true :elim_and false :flat false :hi_div0 false :hoist_mul false :local_ctx false :som false) smt) (then (using-params simplify :blast_distinct true :elim_and false :flat false :hi_div0 true :hoist_mul true :local_ctx true :som true) smt)) (then (using-params simplify :blast_distinct true :elim_and false :flat false :hi_div0 false :hoist_mul false :local_ctx false :som false) smt)) (if (> size 98) (then (using-params simplify :blast_distinct true :elim_and false :flat false :hi_div0 true :hoist_mul true :local_ctx true :som true) smt) (then (using-params simplify :blast_distinct true :elim_and false :flat false :hi_div0 false :hoist_mul false :local_ctx false :som false) smt)))) (then (using-params simplify :blast_distinct true :elim_and false :flat false :hi_div0 true :hoist_mul true :local_ctx true :som true) smt))))) (then (using-params simplify :blast_distinct false :elim_and true :flat false :hi_div0 false :hoist_mul false :local_ctx false :som false) propagate-values (using-params simplify :blast_distinct false :elim_and false :flat false :hi_div0 false :hoist_mul true :local_ctx true :som false) smt))) (if (> num-consts 7) (then (using-params simplify :blast_distinct false :elim_and true :flat false :hi_div0 false :hoist_mul false :local_ctx false :som false) propagate-values (using-params simplify :blast_distinct false :elim_and false :flat false :hi_div0 false :hoist_mul true :local_ctx true :som false) smt) (if (> num-exprs 102) (then (using-params simplify :blast_distinct false :elim_and true :flat false :hi_div0 false :hoist_mul false :local_ctx false :som false) propagate-values (using-params simplify :blast_distinct false :elim_and false :flat false :hi_div0 false :hoist_mul true :local_ctx true :som false) smt) (then (using-params simplify :blast_distinct false :elim_and true :flat false :hi_div0 false :hoist_mul false :local_ctx false :som false) propagate-values (using-params simplify :blast_distinct false :elim_and false :flat false :hi_div0 false :hoist_mul true :local_ctx true :som false) smt))))